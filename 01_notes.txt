🎯 Docker


⭐️ What is Docker?
  Docker is a tool that allows developers to package applications along
  with their dependencies into a container so that the application can run
  consistently across different environments.
  Think of it like a shipping container for software—no matter where you 
  transport it (local machine, cloud, another OS), it runs the same way.


⭐️ What is a Container?

  A container is a lightweight, isolated environment that contains everything
  needed to run an application, including:
  👉The code
  👉Runtime (like Java, Node.js, Python, etc.)
  👉Libraries and dependencies
  Containers are lightweight because they share the host OS kernel instead of
   needing a full operating system like a virtual machine (VM).

  💡 Example: If you build a Java Spring Boot app inside a container, 
    you don’t have to install Java separately on every machine where you run it.
    The container already has Java inside.

⭐️ Docker Image
  A Docker Image is like a blueprint for a container. It contains everything your 
  application needs to run.

  💡 Example: Imagine an image as a frozen pizza, and when you start a container, 
  it's like cooking the pizza—now it's ready to eat (or run).

  👉How They Work Together
    👉You create a Docker Image (blueprint) for your application.
    👉When you start the image, it becomes a running Container.
    👉You can run multiple containers from the same image.    



